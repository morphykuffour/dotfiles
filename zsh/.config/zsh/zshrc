#!/bin/sh

# start tmux on startup
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  exec tmux
fi

# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

# some useful options (man zshoptions)
setopt autocd extendedglob nomatch menucomplete
setopt interactive_comments
stty stop undef		# Disable ctrl-s to freeze terminal.
zle_highlight=('paste:none')

# beeping is annoying
unsetopt BEEP

# completions
autoload -Uz compinit
zstyle ':completion:*' menu select
# zstyle ':completion::complete:lsof:*' menu yes select
zmodload zsh/complist
# compinit
_comp_options+=(globdots)		# Include hidden files.

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# Colors
# autoload -Uz colors && colors

# Useful Functions
# source "$ZDOTDIR/zsh-functions"
source "$ZDOTDIR/zsh_functions"

# Functions
FPATH=$ZDOTDIR/zsh_functions/:$FPATH
# Attempt to loop autloading of custom functions
autoload -Uz $ZDOTDIR/zsh_functions/*
# autoload -Uz ${fpath[1]}/*(:t)

# Normal files to source
zsh_add_file "zsh-exports"
# zsh_add_file "kali-zshrc"
zsh_add_file "zsh-vim-mode"
zsh_add_file "zsh-aliases"

# Plugins
zsh_add_file "zsh-vim-mode"
zsh_add_file "zsh-aliases"
# zsh_add_file "zsh-prompt"

# Key-bindings
bindkey -s '^o' 'ranger^M'
bindkey -s '^s' 'ncdu^M'
bindkey -s '^f' 'nvim $(fzf)^M'
bindkey -s '^v' 'nvim\n'
bindkey -s '^z' 'zi^M'
bindkey '^[[P' delete-char
bindkey "^p" up-line-or-beginning-search # Up
bindkey "^n" down-line-or-beginning-search # Down
bindkey "^k" up-line-or-beginning-search # Up
bindkey "^j" down-line-or-beginning-search # Down
bindkey -r "^u"
bindkey -r "^d"

# FZF
[ -f /usr/share/fzf/completion.zsh ] && source /usr/share/fzf/completion.zsh
[ -f /usr/share/fzf/key-bindings.zsh ] && source /usr/share/fzf/key-bindings.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f $ZDOTDIR/completion/_fnm ] && fpath+="$ZDOTDIR/completion/"
# export FZF_DEFAULT_COMMAND='rg --hidden -l ""'
compinit

# # Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line
bindkey -M vicmd v edit-command-line

cd() {
  # Check if no arguments to make just typing cd<Enter> work
  # Also check if the first argument starts with a - and let cd handle it
  if [ $# -eq 0 ] || [[ $1 == -* ]]
  then
    builtin cd $@
    return
  fi
  # If path exists, just cd into it
  # (also, using $* and not $@ makes it so you don't have to escape spaces any more)
  if [[ -d "$*" ]]
  then
    builtin cd "$*"
    return
  else
    # Try converting from Windows to absolute Linux path and try again
    WSLP=$(wslpath -ua "$*")
    if [[ -d "$WSLP" ]]
    then
      builtin cd "$WSLP"
      return
    fi
  fi
  # If both options don't work, just let the builtin cd handle it
  builtin cd "$*"
}
